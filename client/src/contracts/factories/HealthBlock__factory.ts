/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { HealthBlock, HealthBlockInterface } from "../HealthBlock";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "string",
        name: "_name",
        type: "string",
      },
    ],
    name: "NDoctor",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "string",
        name: "_name",
        type: "string",
      },
    ],
    name: "NPatient",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "patients",
    outputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "age",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "email",
        type: "string",
      },
      {
        internalType: "address",
        name: "id",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "_age",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "_email",
        type: "string",
      },
    ],
    name: "registerPatient",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getPatientInfo",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "getPatientInfoAll",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDoctorInfo",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "",
        type: "string",
      },
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "getDoctorInfoAll",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "",
        type: "string",
      },
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "_age",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "_email",
        type: "string",
      },
      {
        internalType: "string",
        name: "_specialization",
        type: "string",
      },
    ],
    name: "registerDoctor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506119b3806100606000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063a9b467ee1161005b578063a9b467ee146100f1578063b2d258ff14610123578063b380f5c61461013f578063e1e36ab9146101605761007d565b80630869cfbc146100825780631c297205146100b5578063326df664146100d1575b600080fd5b61009c60048036038101906100979190611186565b610193565b6040516100ac949392919061126e565b60405180910390f35b6100cf60048036038101906100ca9190611422565b610300565b005b6100d9610539565b6040516100e8939291906114ad565b60405180910390f35b61010b60048036038101906101069190611186565b610763565b60405161011a939291906114ad565b60405180910390f35b61013d600480360381019061013891906114f2565b6108ec565b005b610147610c3a565b60405161015794939291906115ad565b60405180910390f35b61017a60048036038101906101759190611186565b610ef8565b60405161018a94939291906115ad565b60405180910390f35b60016020528060005260406000206000915090508060000180546101b690611636565b80601f01602080910402602001604051908101604052809291908181526020018280546101e290611636565b801561022f5780601f106102045761010080835404028352916020019161022f565b820191906000526020600020905b81548152906001019060200180831161021257829003601f168201915b5050505050908060010160009054906101000a900460ff169080600201805461025790611636565b80601f016020809104026020016040519081016040528092919081815260200182805461028390611636565b80156102d05780601f106102a5576101008083540402835291602001916102d0565b820191906000526020600020905b8154815290600101906020018083116102b357829003601f168201915b5050505050908060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905084565b60405160200161030f90611698565b604051602081830303815290604052805190602001208360405160200161033691906116de565b604051602081830303815290604052805190602001200361035657600080fd5b60405160200161036590611698565b604051602081830303815290604052805190602001208160405160200161038c91906116de565b60405160208183030381529060405280519060200120036103ac57600080fd5b60008260ff161180156103c2575060648260ff16105b6103cb57600080fd5b60405180608001604052808481526020018360ff1681526020018281526020013373ffffffffffffffffffffffffffffffffffffffff16815250600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082015181600001908161045991906118ab565b5060208201518160010160006101000a81548160ff021916908360ff160217905550604082015181600201908161049091906118ab565b5060608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550905050826040516104e991906116de565b60405180910390203373ffffffffffffffffffffffffffffffffffffffff167fe3413e34d7cfab2884866aa8dfc64b0c31d51db035044e04a349a1faf6c7d67660405160405180910390a3505050565b606060006060336000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050600073ffffffffffffffffffffffffffffffffffffffff168160030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16116105e057600080fd5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050806000018160010160009054906101000a900460ff168260020182805461064990611636565b80601f016020809104026020016040519081016040528092919081815260200182805461067590611636565b80156106c25780601f10610697576101008083540402835291602001916106c2565b820191906000526020600020905b8154815290600101906020018083116106a557829003601f168201915b505050505092508080546106d590611636565b80601f016020809104026020016040519081016040528092919081815260200182805461070190611636565b801561074e5780601f106107235761010080835404028352916020019161074e565b820191906000526020600020905b81548152906001019060200180831161073157829003601f168201915b50505050509050955095509550505050909192565b6060600060606000600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050806000018160010160009054906101000a900460ff16826002018280546107d290611636565b80601f01602080910402602001604051908101604052809291908181526020018280546107fe90611636565b801561084b5780601f106108205761010080835404028352916020019161084b565b820191906000526020600020905b81548152906001019060200180831161082e57829003601f168201915b5050505050925080805461085e90611636565b80601f016020809104026020016040519081016040528092919081815260200182805461088a90611636565b80156108d75780601f106108ac576101008083540402835291602001916108d7565b820191906000526020600020905b8154815290600101906020018083116108ba57829003601f168201915b50505050509050935093509350509193909250565b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060405160200161093e90611698565b604051602081830303815290604052805190602001208560405160200161096591906116de565b604051602081830303815290604052805190602001200361098557600080fd5b60405160200161099490611698565b60405160208183030381529060405280519060200120836040516020016109bb91906116de565b60405160208183030381529060405280519060200120036109db57600080fd5b6040516020016109ea90611698565b6040516020818303038152906040528051906020012082604051602001610a1191906116de565b6040516020818303038152906040528051906020012003610a3157600080fd5b60008460ff16118015610a47575060648460ff16105b610a5057600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168160040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161115610aae57600080fd5b6040518060a001604052808681526020018560ff1681526020018481526020018381526020013373ffffffffffffffffffffffffffffffffffffffff16815250600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000019081610b4291906118ab565b5060208201518160010160006101000a81548160ff021916908360ff1602179055506040820151816002019081610b7991906118ab565b506060820151816003019081610b8f91906118ab565b5060808201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555090505084604051610be891906116de565b60405180910390203373ffffffffffffffffffffffffffffffffffffffff167fe3413e34d7cfab2884866aa8dfc64b0c31d51db035044e04a349a1faf6c7d67660405160405180910390a35050505050565b60606000606080336000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050600073ffffffffffffffffffffffffffffffffffffffff168160040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1611610ce257600080fd5b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050806000018160010160009054906101000a900460ff168260020183600301838054610d4f90611636565b80601f0160208091040260200160405190810160405280929190818152602001828054610d7b90611636565b8015610dc85780601f10610d9d57610100808354040283529160200191610dc8565b820191906000526020600020905b815481529060010190602001808311610dab57829003601f168201915b50505050509350818054610ddb90611636565b80601f0160208091040260200160405190810160405280929190818152602001828054610e0790611636565b8015610e545780601f10610e2957610100808354040283529160200191610e54565b820191906000526020600020905b815481529060010190602001808311610e3757829003601f168201915b50505050509150808054610e6790611636565b80601f0160208091040260200160405190810160405280929190818152602001828054610e9390611636565b8015610ee05780601f10610eb557610100808354040283529160200191610ee0565b820191906000526020600020905b815481529060010190602001808311610ec357829003601f168201915b50505050509050965096509650965050505090919293565b606060006060806000600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050806000018160010160009054906101000a900460ff168260020183600301838054610f6c90611636565b80601f0160208091040260200160405190810160405280929190818152602001828054610f9890611636565b8015610fe55780601f10610fba57610100808354040283529160200191610fe5565b820191906000526020600020905b815481529060010190602001808311610fc857829003601f168201915b50505050509350818054610ff890611636565b80601f016020809104026020016040519081016040528092919081815260200182805461102490611636565b80156110715780601f1061104657610100808354040283529160200191611071565b820191906000526020600020905b81548152906001019060200180831161105457829003601f168201915b5050505050915080805461108490611636565b80601f01602080910402602001604051908101604052809291908181526020018280546110b090611636565b80156110fd5780601f106110d2576101008083540402835291602001916110fd565b820191906000526020600020905b8154815290600101906020018083116110e057829003601f168201915b505050505090509450945094509450509193509193565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061115382611128565b9050919050565b61116381611148565b811461116e57600080fd5b50565b6000813590506111808161115a565b92915050565b60006020828403121561119c5761119b61111e565b5b60006111aa84828501611171565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156111ed5780820151818401526020810190506111d2565b60008484015250505050565b6000601f19601f8301169050919050565b6000611215826111b3565b61121f81856111be565b935061122f8185602086016111cf565b611238816111f9565b840191505092915050565b600060ff82169050919050565b61125981611243565b82525050565b61126881611148565b82525050565b60006080820190508181036000830152611288818761120a565b90506112976020830186611250565b81810360408301526112a9818561120a565b90506112b8606083018461125f565b95945050505050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611303826111f9565b810181811067ffffffffffffffff82111715611322576113216112cb565b5b80604052505050565b6000611335611114565b905061134182826112fa565b919050565b600067ffffffffffffffff821115611361576113606112cb565b5b61136a826111f9565b9050602081019050919050565b82818337600083830152505050565b600061139961139484611346565b61132b565b9050828152602081018484840111156113b5576113b46112c6565b5b6113c0848285611377565b509392505050565b600082601f8301126113dd576113dc6112c1565b5b81356113ed848260208601611386565b91505092915050565b6113ff81611243565b811461140a57600080fd5b50565b60008135905061141c816113f6565b92915050565b60008060006060848603121561143b5761143a61111e565b5b600084013567ffffffffffffffff81111561145957611458611123565b5b611465868287016113c8565b93505060206114768682870161140d565b925050604084013567ffffffffffffffff81111561149757611496611123565b5b6114a3868287016113c8565b9150509250925092565b600060608201905081810360008301526114c7818661120a565b90506114d66020830185611250565b81810360408301526114e8818461120a565b9050949350505050565b6000806000806080858703121561150c5761150b61111e565b5b600085013567ffffffffffffffff81111561152a57611529611123565b5b611536878288016113c8565b94505060206115478782880161140d565b935050604085013567ffffffffffffffff81111561156857611567611123565b5b611574878288016113c8565b925050606085013567ffffffffffffffff81111561159557611594611123565b5b6115a1878288016113c8565b91505092959194509250565b600060808201905081810360008301526115c7818761120a565b90506115d66020830186611250565b81810360408301526115e8818561120a565b905081810360608301526115fc818461120a565b905095945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061164e57607f821691505b60208210810361166157611660611607565b5b50919050565b600081905092915050565b50565b6000611682600083611667565b915061168d82611672565b600082019050919050565b60006116a382611675565b9150819050919050565b60006116b8826111b3565b6116c28185611667565b93506116d28185602086016111cf565b80840191505092915050565b60006116ea82846116ad565b915081905092915050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026117577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261171a565b611761868361171a565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b60006117a86117a361179e84611779565b611783565b611779565b9050919050565b6000819050919050565b6117c28361178d565b6117d66117ce826117af565b848454611727565b825550505050565b600090565b6117eb6117de565b6117f68184846117b9565b505050565b5b8181101561181a5761180f6000826117e3565b6001810190506117fc565b5050565b601f82111561185f57611830816116f5565b6118398461170a565b81016020851015611848578190505b61185c6118548561170a565b8301826117fb565b50505b505050565b600082821c905092915050565b600061188260001984600802611864565b1980831691505092915050565b600061189b8383611871565b9150826002028217905092915050565b6118b4826111b3565b67ffffffffffffffff8111156118cd576118cc6112cb565b5b6118d78254611636565b6118e282828561181e565b600060209050601f8311600181146119155760008415611903578287015190505b61190d858261188f565b865550611975565b601f198416611923866116f5565b60005b8281101561194b57848901518255600182019150602085019450602081019050611926565b868310156119685784890151611964601f891682611871565b8355505b6001600288020188555050505b50505050505056fea2646970667358221220d5f4f012bd9a83d2817f6df2ec4bf97dd7c6967b344fa17566da4828fd7dfd2c64736f6c63430008110033";

type HealthBlockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: HealthBlockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class HealthBlock__factory extends ContractFactory {
  constructor(...args: HealthBlockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<HealthBlock> {
    return super.deploy(overrides || {}) as Promise<HealthBlock>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): HealthBlock {
    return super.attach(address) as HealthBlock;
  }
  override connect(signer: Signer): HealthBlock__factory {
    return super.connect(signer) as HealthBlock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HealthBlockInterface {
    return new utils.Interface(_abi) as HealthBlockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): HealthBlock {
    return new Contract(address, _abi, signerOrProvider) as HealthBlock;
  }
}
